name: deploy

on:
  pull_request:
    types: [closed]
  push:
    branches:
      - master
      - main
jobs:
  style_check:
    name: Test with ruff
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install flake8
      run: |
          python -m pip install --upgrade pip
          pip install ruff==0.9.4
  
    - name: Test style
      run: python -m ruff check ./src

  build_backend_and_push_to_docker_hub:
    name: Push backend docker image to DockerHub
    runs-on: ubuntu-latest
    needs: style_check
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./src
          file: ./src/backend.Dockerfile
          push: true
          tags: arteic/recruit-service-backend:latest

  build_bot_and_push_to_docker_hub:
    name: Push bot docker image to DockerHub
    runs-on: ubuntu-latest
    needs: style_check
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./src
          file: ./src/bot.Dockerfile
          push: true
          tags: arteic/recruit-service-bot:latest

  build_celery_worker_and_push_to_docker_hub:
    name: Push celery worker docker image to DockerHub
    runs-on: ubuntu-latest
    needs: style_check
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./src
          file: ./src/celery_worker.Dockerfile
          push: true
          tags: arteic/recruit-service-celery-worker:latest

  build_celery_beat_and_push_to_docker_hub:
    name: Push celery beat docker image to DockerHub
    runs-on: ubuntu-latest
    needs: style_check
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./src
          file: ./src/celery_beat.Dockerfile
          push: true
          tags: arteic/recruit-service-celery-beat:latest

  build_flower_and_push_to_docker_hub:
    name: Push flower docker image to DockerHub
    runs-on: ubuntu-latest
    needs: style_check
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./src
          file: ./src/flower.Dockerfile
          push: true
          tags: arteic/recruit-service-flower:latest 
    
  build_gateway_and_push_to_docker_hub:
    name: Push gateway docker image to DockerHub
    runs-on: ubuntu-latest
    needs: style_check
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: ./infra/nginx/
          push: true
          tags: arteic/recruit-service-gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_backend_and_push_to_docker_hub
      - build_bot_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
      - build_celery_worker_and_push_to_docker_hub
      - build_celery_beat_and_push_to_docker_hub
      - build_flower_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "infra/docker-compose.prod.yml"
        target: "/opt/recrut"
        strip_components: 1
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd /opt/recrut/
          docker compose -f docker-compose.prod.yml pull
          docker compose -f docker-compose.prod.yml down
          docker compose -f docker-compose.prod.yml up -d --wait
          docker exec recruit-service-backend alembic upgrade head
          docker exec recruit-service-backend python cli.py --username superadmin --tg-id 777777777 --tg-username superadmin --birth-date 2025-03-05 --email superadmin@admin.com --phone +79999998844 --password Admin222
